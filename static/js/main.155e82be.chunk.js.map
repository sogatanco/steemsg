{"version":3,"sources":["Pages/Tracking.js","App.js","reportWebVitals.js","index.js"],"names":["Tracking","state","data","filldata","users","user","fetch","then","response","json","jsonData","setState","result","rows","catch","error","sum","this","reduce","prev","current","console","log","Navbar","bg","variant","expand","Container","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","ButtonGroup","aria-label","size","map","Button","onClick","getData","Table","striped","bordered","hover","responsive","x","Date","toLocaleDateString","React","Component","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAuGeA,E,kDAjGX,aAAc,IAAD,8BACT,gBACKC,MAAM,CACPC,KAAK,GACLC,UAAS,EACTC,MAAM,CAAC,aAAc,QAAS,UAAW,aAAc,SAAU,aAAc,cAAe,kBAAmB,cAL5G,E,2CAUb,SAAQC,GAAM,IAAD,OACTC,MAAM,mKAAmKD,EAAK,iBAC7KE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACG,GACL,EAAKC,SAAS,CAACR,UAAS,IACxB,EAAKQ,SAAS,CAACT,KAAKQ,EAASE,OAAOC,UAErCC,OAAM,SAACC,GACN,EAAKJ,SAAS,CAACT,KAAKa,S,oBAO1B,WAAS,IAAD,OAEAC,EAAMC,KAAKhB,MAAMC,KAAKgB,QAAO,SAASC,EAAMC,GAC5C,OAAOD,IAAQC,EAAQ,KACtB,GAGD,OADFC,QAAQC,IAAIN,GAGN,gCACK,cAACO,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,OAAO,KAAxC,SACG,eAACC,EAAA,EAAD,WACI,cAACJ,EAAA,EAAOK,MAAR,CAAcC,KAAK,QAAnB,kDACI,cAACN,EAAA,EAAOO,OAAR,CAAeC,gBAAc,qBAC7B,cAACR,EAAA,EAAOS,SAAR,CAAiBC,GAAG,mBAApB,SACI,cAACC,EAAA,EAAD,CAAKC,UAAU,mBAQ/B,eAACR,EAAA,EAAD,CAAWQ,UAAU,OAArB,UACI,cAACC,EAAA,EAAD,CAAaC,aAAW,gBAAgBC,KAAK,KAAKH,UAAU,YAA5D,SACKlB,KAAKhB,MAAMG,MAAMmC,KAAI,SAAClC,GAAD,OAClB,cAACmC,EAAA,EAAD,CAAQL,UAAU,OAAkBV,QAAQ,YAAYgB,QAAS,kBAAI,EAAKC,QAAQrC,IAAlF,SAA0FA,GAA5DA,QAKtC,eAACsC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACR,KAAK,KAAKS,YAAU,EAAlD,UACI,gCACI,+BACI,sCACA,0CACA,yCAAY/B,EAAZ,OACA,2CAGR,gCAEKC,KAAKhB,MAAMC,KAAKqC,KAAI,SAACS,GAAD,OACjB,+BACA,6BAAK,IAAIC,KAAU,IAALD,EAAE,IAASE,mBAAmB,WAC5C,6BAAKF,EAAE,KACP,6BAAKA,EAAE,KACP,6BAAKA,EAAE,OAJEA,qB,GAtEtBG,IAAMC,W,eCWdC,MAXf,WACE,OACC,cAAC,IAAD,UACC,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWxD,SCIxByD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpD,MAAK,YAAkD,IAA/CqD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.155e82be.chunk.js","sourcesContent":["import React, { useCallback }  from 'react';\nimport {Navbar, Nav, Container, Button, ButtonGroup, Table} from 'react-bootstrap' ;\n\n\nclass Tracking extends React.Component{\n\n    constructor(){\n        super();\n        this.state={\n            data:[],\n            filldata:true,\n            users:['arie.steem', 'pojan', 'ponpase', 'julstamban', 'mcsamm', 'nattybongo', 'cryptokraze', 'michaelchijioke', 'oscarcc89']\n        }\n        \n    }\n\n    getData(user){\n        fetch('https://sds1.steemworld.org/transfers_api/getTransfers/%7B%22type%22:%22transfer_to_vesting%22,%22orderBy%22:%22time%22,%22orderDir%22:%22DESC%22,%22from%22:%22'+user+'%22%7D/1000/0')\n        .then(response => response.json())\n        .then((jsonData) => {\n          this.setState({filldata:false})\n          this.setState({data:jsonData.result.rows})\n        })\n        .catch((error) => {\n          this.setState({data:error})\n        })\n    }\n\n  \n   \n\n    render(){\n\n        let sum = this.state.data.reduce(function(prev, current) {\n            return prev + +current[3]\n          }, 0);\n\n          console.log(sum)\n            return(\n               \n                <div>\n                     <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n                        <Container>\n                            <Navbar.Brand href=\"#home\">PromoSteem.COM (powerup information)</Navbar.Brand>\n                                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                                <Navbar.Collapse id=\"basic-navbar-nav\">\n                                    <Nav className=\"me-auto\">\n                                    {/* <Nav.Link href=\"#home\">Home</Nav.Link>\n                                    <Nav.Link href=\"#link\">Link</Nav.Link> */}\n                                    </Nav>\n                                </Navbar.Collapse>\n                        </Container>\n                    </Navbar>\n    \n                    <Container className=\"mt-4\">\n                        <ButtonGroup aria-label=\"Basic example\" size=\"sm\" className=\"flex-wrap\">\n                            {this.state.users.map((user)=>(\n                                <Button className=\"mb-2\" key={user} variant=\"secondary\" onClick={()=>this.getData(user)}>{user}</Button>\n                            ))}\n                           \n                        </ButtonGroup>\n    \n                        <Table striped bordered hover size=\"sm\" responsive>\n                            <thead>\n                                <tr>\n                                    <th>Date</th>\n                                    <th>Username</th>\n                                    <th>Amount({sum})</th>\n                                    <th>Unit</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                \n                                {this.state.data.map((x)=>(\n                                    <tr key={x}>\n                                    <td>{new Date(x[0]*1000).toLocaleDateString(\"en-us\")}</td>\n                                    <td>{x[1]}</td>\n                                    <td>{x[3]}</td>\n                                    <td>{x[4]}</td>\n                                </tr>\n                                ))}\n\n                               \n                                \n                            </tbody>\n                            </Table>\n    \n                    </Container>\n    \n    \n    \n                \n                </div>\n            );\n\n        \n\n   \n        \n    }\n\n}\n\nexport default Tracking;","import React from 'react';\nimport Tracking from './Pages/Tracking';\nimport {Route, BrowserRouter, Switch} from 'react-router-dom';\n\nfunction App() {\n  return (\n   <BrowserRouter>\n    <Switch>\n      <Route path=\"/\" exact component={Tracking}/>\n      {/* <Route path=\"/product\" exact component={Product}/> */}\n    </Switch>\n   </BrowserRouter>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}